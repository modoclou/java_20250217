package com.company.java015_ex;

import java.util.HashSet;
import java.util.Objects;
import java.util.Scanner;
import java.util.Set;

/*
//	1. UserInfo2    Dto 클래스만들기  - 속성 : private int no; private  String name; private  int age;
*/

class UserInfo2{
	private int no;
	private String name;
	private int age;
	
	public UserInfo2() { super(); }
	public UserInfo2(int no, String name, int age) { super(); this.no = no; this.name = name; this.age = age; }
	@Override public String toString() { return "UserInfo [no=" + no + ", name=" + name + ", age=" + age + "]"; }
	
	public int getNo() { return no; }
	public void setNo(int no) { this.no = no; }
	public String getName() { return name; }
	public void setName(String name) { this.name = name; }
	public int getAge() { return age; }
	public void setAge(int age) { this.age = age; }
	
	@Override public int hashCode() { return Objects.hash(no, name, age); } //1. 객체기반 생성확인
	@Override public boolean equals(Object obj) { //2. 객체(UserInfo2)안의 값(no, name, age)이 같은지 확인
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		UserInfo2 other = (UserInfo2) obj;
		return age == other.age && Objects.equals(name, other.name) && no == other.no; }
}

//Set 동적배열 - 주머니 index(X), 중복허용(X) / add, get(X), size, remove, contains
public class SetEx002 {
	public static void main(String[] args) {
//	2. users   HashSet만들기
		Set<UserInfo2> users = new HashSet<>();
//	3. 다음의 데이터 넣기
		users.add(new UserInfo2(1, "아이언맨" , 50));
		users.add(new UserInfo2(2, "헐크" , 40));
		users.add(new UserInfo2(3, "캡틴" , 120));
		users.add(new UserInfo2(4, "캡틴" , 120));
		System.out.println("회원수 > " + users.size()); //4명 --- 3명
		System.out.println(users.getClass());
//		System.out.println(users);
//		Set<UserInfo2> users2 = new HashSet<>();
//		users2.add(new Interator(1, "아이언맨" , 50));
//		users2.add(new Interator(2, "헐크" , 40));
//		users2.add(new Interator(3, "캡틴" , 120));
//		users2.add(new Interator(4, "캡틴" , 120));
		
//	4. 향상된 for / Interator 이용해서 데이터 출력
		for( UserInfo2 temp : users) {
			System.out.println(temp.getNo() + " / " +  temp.getName() + " / " + temp.getAge());
		}
		
//	5. 사용자들의 이름 입력받기 - 이름을 입력받으면 해당하는  유저의 자료출력
		Scanner sc = new Scanner(System.in);
		System.out.println("사용자 이름을 입력하세요 > ");		String input = sc.next(); 
		for(int i=0; i<users.size(); i++) {
			if(users.get(i).getName().equals(input)) {
				UserInfo2 temp = users.get(i);
				System.out.println(temp.getNo() + "/" + temp.getName() + "/" + temp.getAge());
				break;
			}
		}
	}
}
